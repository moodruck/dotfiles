# Bash colors

## Usage
## echo -e "\033[COLORm"
##             or
## printf "\e[COLORm"
##
## color escaping in PS1
## \[\033[COLORm\]

# Reset color 0

## Regular Colors
#         fg   bg
#-----------------
# Black   30   40
# Red     31   41
# Green   32   42
# Yellow  33   43
# Blue    34   44
# Purple  35   45
# Cyan    36   46
# White   37   47

__git_branch_name ()
{
    local b=$(git symbolic-ref HEAD 2>/dev/null)
    echo "${b##*/}"
}
__git_ps1 ()
{
    local b=`__git_branch_name`
    if [ -n "$b" ]; then
        printf "($b)"
    else
        local sha="$(git rev-parse --short HEAD 2>/dev/null)"
        if [ -n "$sha" ]; then
            printf "{$sha}"
        fi
    fi
}

__prompt ()
{
    local blue='\[\e[34m\]'
    local green='\[\e[32m\]'
    local red='\[\e[31m\]'
    local yellow='\[\e[33m\]'
    local esc_color='\[\e[0m\]'
    local c=$esc_color

    local st=$(git status 2>/dev/null | tail -n 1)
    if [[ $st != "nothing to commit (working directory clean)" ]]; then
        c=$red
    else
        c=$green
    fi

    # local b_info=$(git branch -v 2>/dev/null | grep __git_branch_name)
    # if [[ $brinfo =~ ("[ahead "([[:digit:]]*)]) ]]; then
    #     c=$yellow
    # fi

    printf $blue'\w'$c' `__git_ps1` '$blue'$ '$esc_color
}

# Prompt
export PS1=`__prompt`
